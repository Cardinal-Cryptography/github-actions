---
name: GH Deployments and Environments
description: |
  Creates, updates and deletes GitHub Deployments and Environments
inputs:
  action:
    description: One of 'create-deployment', 'create-deployment-status'
    required: true
  env:
    description: Environment name
    required: false
  ref:
    description: Ref for deployment
    required: false
  token:
    description: GitHub token
    required: true
  owner:
    description: Owner
    required: true
  repo:
    description: Repo
    required: true
  deployment-id:
    description: Deployment ID
    required: false
  deployment-status:
    description: Status of the deployment, one of error, failure, inactive, in_progress, queued, pending, success
    required: false
outputs:
  deployment-id: 
    description: ID of created deployment
    value: ${{ steps.create-deployment.outputs.deployment-id }}
runs:
  using: composite
  steps:
    - name: Create deployment
      id: create-deployment
      if: ${{ inputs.action == 'create-deployment' }}
      shell: bash
      run: |
        if [[ -z "${{ inputs.ref }}" ]]; then
          echo "!!! ref is empty"
          exit 1
        fi


        if [[ -z "${{ inputs.env }}" ]]; then
          echo "!!! env is empty"
          exit 1
        fi

        curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ inputs.token }}"\
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ inputs.owner }}/${{ inputs.repo }}/deployments \
          -d '{"ref":"${{ inputs.ref }}","environment":"${{ inputs.env }}"}' > tmp-output.txt

        cat tmp-output.txt

        deployment_id=$(cat tmp-output.txt | jq '.id')
        if [[ -n "${deployment_id}" ]]; then
          echo "Got deployment id of ${deployment_id}"
        else
          echo "!!! Error creating deployment"
          exit 1
        fi
        echo "deployment-id=${deployment-id}" >> $GITHUB_OUTPUT

    - name: Create deployment status
      id: create-deployment-status
      if: ${{ inputs.action == 'create-deployment-status' }}
      shell: bash
      run: |
        if [[ ! "${{ inputs.deployment-id }}" =~ ^[0-9]{1,16}$ ]]; then
          echo "!!! Invalid deployment-id"
          exit 1
        fi

        if [[ -z "${{ inputs.deployment-status }}" ]]; then
          echo "!!! deployment-status is empty"
          exit 1
        fi

        curl -L \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ inputs.token }}"\
        -H "X-GitHub-Api-Version: 2022-11-28" \
        https://api.github.com/repos/${{ inputs.owner }}/${{ inputs.repo }}/deployments/${{ inputs.deployment-id }}/statuses > tmp-output.txt

        last_state=$(cat tmp-output.txt | jq -r '.[0].state')
        if [[ "${last_state}" == "${{ inputs.deployment-status }}" ]]; then
          echo "Deployment ${{ inputs.deployment-id }} already has status of '${{ inputs.deployment-status }}'"
          exit 0
        fi

        curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ inputs.token }}"\
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ inputs.owner }}/${{ inputs.repo }}/deployments/${{ inputs.deployment-id }}/statuses \
          -d '{"state":"${{ inputs.deployment-status }}"}'
