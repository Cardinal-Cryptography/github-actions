---
name: FE - Update

on:
  workflow_call:
    inputs:
      featurenet-name:
        description: Name of featurenet
        required: true
        type: string
      destination:
        description: Node image tag, ie 7-byte SHA of some existing ECR aleph-node image tag
        required: true
        type: string
      rolling-update-partition:
        description: |
          Number from 0 to N-1, where N is size of am existing featurenet.
          All aleph-node-validator-N with an ordinal N that is great than or equal to the partition
          will be updated. If not specified, all nodes will be updated.
        required: false
        default: "0"
        type: string
      replicas:
        description: 'Number of replicas to start, from 0 to 50'
        required: false
        default: '5'
        type: string
      internal:
        description: 'Internal network, accessible from VPN only'
        required: false
        type: boolean
        default: false

jobs:
  validate-inputs:
    name: Validate inputs
    runs-on: ubuntu-20.04
    steps:
      - name: Validate inputs
        shell: bash
        # yamllint disable rule:line-length
        run: |
          if [[
          ! '${{ inputs.featurenet-name }}' =~ ^[a-z0-9][a-z0-9\-]{4,48}$
          ]]
          then
            echo '!!! Invalid featurenet name'
            exit 1
          fi
        # yamllint enable rule:line-length

  check-vars-and-secrets:
    needs: [validate-inputs]
    name: Check vars and secrets
    uses: ./.github/workflows/_check-vars-and-secrets.yml
    secrets: inherit

  update-featurenet:
    needs: [check-vars-and-secrets]
    name: Update featurenet
    runs-on: [self-hosted, Linux, X64, small]
    outputs:
      deployment-id: ${{ steps.deployment.outputs.deployment_id }}
    steps:
      - name: Validate inputs
        shell: bash
        run: |
          if [[ ! "${{ inputs.featurenet-name }}" =~ ^[a-z0-9][a-z0-9\-]{4,44}$ ]]; then
            echo "!!! Invalid featurenet name"
            exit 1
          fi
          if [[
            "${{ inputs.destination }}" != "" && \
            ! "${{ inputs.destination }}" =~ ^[a-f0-9]{7}$
          ]]; then
            echo "!!! Expected a 7-byte SHA in destination parameter"
            exit 1
          fi
          if [[
            "${{ inputs.rolling-update-partition }}" != "" && \
            ! "${{ inputs.rolling-update-partition }}" =~ ^[0-9]$ \
          ]]; then
            echo "!!! Expected rolling update partition to be a cardinal value from 0 to 9"
            exit 1
          fi

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Start featurenet Deployment
        uses: bobheadxi/deployments@v1.1.0
        id: deployment
        with:
          step: start
          token: ${{ secrets.CI_GH_TOKEN }}
          env: ${{ inputs.featurenet-name }}
          override: true

      - name: Update featurenet data, app and deploy it
        uses: Cardinal-Cryptography/github-actions/create-featurenet@v3
        id: create-featurenet
        with:
          gh-ci-token: ${{ secrets.CI_GH_TOKEN }}
          argo-sync-user-token: ${{ secrets.ARGO_SYNC_USER_TOKEN }}
          repo-featurenets-name: ${{ secrets.REPO_OPS_FEATURENETS_NAME }}
          repo-featurenet-template-name: ${{ secrets.REPO_FEATURENET_TEMPLATE_NAME }}
          argo-host: ${{ secrets.ARGOCD_DEVNET_HOST }}
          ecr-public-registry: ${{ vars.ECR_PUBLIC_REGISTRY }}
          featurenet-keys-s3bucket-name: ${{ secrets.FEATURENET_KEYS_S3BUCKET_NAME }}
          featurenet-name: ${{ inputs.featurenet-name }}
          featurenet-aleph-node-image: ${{ inputs.destination }}
          rolling-update-partition: ${{ inputs.rolling-update-partition }}
          replicas: ${{ inputs.replicas }}
          internal: ${{ inputs.internal && 'true' || 'false' }}
          git-commit-author: ${{ secrets.AUTOCOMMIT_AUTHOR }}
          git-commit-email: ${{ secrets.AUTOCOMMIT_EMAIL }}
          hard-refresh: 'true'
          wait-for-finalized-heads: "true"

      - name: Finish featurenet Deployment
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.CI_GH_TOKEN }}
          status: ${{ job.status }}
          env: ${{ inputs.featurenet-name }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          # yamllint disable-line rule:line-length
          env_url: https://dev.azero.dev/?rpc=wss%3A%2F%2F${{ steps.create-featurenet.outputs.ws-hostname }}#/explorer
