---
name: Tmp test contract artifact store

on:
  push:
    branches:
      - non-existing-branch

jobs:
  artifacts:
    name: Add artifacts
    runs-on: [self-hosted, Linux, X64, small]
    steps:
      - name: Create files
        shell: bash
        run: |
          touch art1-1.txt
          touch art1-2.txt
          touch art2-1.txt
          touch art2-2.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts1
          path: |
            art1-1.txt
            art1-2.txt
  
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts2
          path: |
            art2-1.txt
            art2-2.txt
  test1:
    name: Test sub-workflow
    needs: [artifacts]
    uses: ./.github/workflows/_contract-artifact-store.yml
    secrets: inherit
    with:
      project: 'most'
      version: 'v1.0.0'
      artifacts: >-
        {
          "include":
          [
            {
              "contract": "eth_governance",
              "artifact": "downloaded-artifacts/eth/artifacts/contracts/Governance.sol/Governance.json"
            },
            {
              "contract": "azero_something",
              "artifact": "downloaded-artifacts/something/path1"
            }
          ]
        }
      checkout: true
      checkout-ref: ''
      download-artifacts: artifacts*
  test2:
    name: Test sub-workflow 2
    needs: [test1]
    uses: ./.github/workflows/_contract-addresses-store.yml
    secrets: inherit
    with:
      project: 'most'
      chain-environment: 'bridgenet'
      frontend-environment: 'dev'
      addresses: some/path/addresses.json
      checkout: true
      checkout-ref: ''
      download-artifacts: artifacts*
  test3:
    name: Test sub-worklow 3
    needs: [test2]
    uses: ./.github/workflows/_contract-artifact-download.yml
    secrets: inherit
    with:
      project: 'most'
      version: 'v1.0.0'
      artifacts: >-
        {
          "include":
          [
            {
              "contract": "eth_governance"
            },
            {
              "contract": "azero_something"
            }
          ]
        }
