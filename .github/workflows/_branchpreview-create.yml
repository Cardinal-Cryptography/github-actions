---
name: BR - Create

on:
  workflow_call:
    inputs:
      repository-name:
        description: Repository name
        required: true
        type: string
      branch-name:
        description: Branch name
        required: true
        type: string
      image:
        description: Docker image, in format of repo:tag
        required: true
        type: string
      registry-host:
        description: "Choose from 'private' or 'public'"
        required: true
        type: string
      post-frontend-url:
        description: "Post frontend-url output to PR comments"
        required: false
        type: string
        default: "false"
      pull-request-number:
        description: "Pull request number required when posting frontend-url"
        required: false
        type: string
        default: ""
    outputs:
      base64:
        description: Outputs encoded with base64
        value: ${{ jobs.create-branchpreview.outputs.base64 }}

jobs:
  check-vars-and-secrets:
    name: Check vars and secrets
    uses: ./.github/workflows/_check-vars-and-secrets.yml
    secrets: inherit

  create-branchpreview:
    needs: [check-vars-and-secrets]
    name: Create branchpreview
    runs-on: [self-hosted, Linux, X64, small]
    outputs:
      base64: ${{ steps.create-branchpreview.outputs.base64 }}
    steps:
      - name: Create branchpreview
        id: create-branchpreview
        uses: Cardinal-Cryptography/github-actions/create-branchpreview@v7
        with:
          repository-name: ${{ inputs.repository-name }}
          branch-name: ${{ inputs.branch-name }}
          # yamllint disable-line rule:line-length
          image: ${{ inputs.registry-host == 'private' && secrets.ECR_PRIVATE_HOST || vars.ECR_PUBLIC_HOST }}/${{ inputs.image }}
          gh-ci-token: ${{ secrets.CI_GH_TOKEN }}
          repo-branchpreviews-name: ${{ secrets.REPO_OPS_BRANCHPREVIEWS_NAME }}
          repo-branchpreview-templates-name: ${{ secrets.REPO_BRANCHPREVIEW_TEMPLATES_NAME }}
          argo-host: ${{ secrets.ARGOCD_DEVNET_HOST }}
          argo-sync-user-token: ${{ secrets.ARGO_SYNC_USER_TOKEN }}
          git-commit-author: ${{ secrets.AUTOCOMMIT_AUTHOR }}
          git-commit-email: ${{ secrets.AUTOCOMMIT_EMAIL }}
          hard-refresh: 'true'
          post-frontend-url: '${{ inputs.post-frontend-url }}'
          pull-request-number: '${{ inputs.pull-request-number }}'
