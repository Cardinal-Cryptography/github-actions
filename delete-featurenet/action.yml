---
name: Delete featurenet
description: Deletes featurenet

inputs:
  gh-ci-token:
    description: 'GH token to be used in the action'
    required: true
  repo-featurenets-name:
    description: 'Name of the repository containing featurenets manifests'
    required: true
  repo-featurenet-template-name:
    description: 'Name of the repository containing featurenet template'
    required: true
  aws-access-key-id:
    description: 'AWS Access Key ID to be used in the action'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Access Key to be used in the action'
    required: true
  ecr-public-registry:
    description: "ECR public registry, with slash at the end, eg. 'public.ecr.aws/something/'"
    required: true
  argo-sync-user-token:
    description: 'ArgoCD user token to be used in the action'
    required: true
  featurenet-name:
    description: 'Name of featurenet'
    required: true
  git-commit-author:
    description: 'Git commit author when pushing to featurenets repository'
    required: true
  git-commit-email:
    description: 'Git commit email when pushing to featurenets repository'
    required: true

runs:
  using: "composite"
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        if [[
          ! '${{ inputs.featurenet-name }}' =~ ^[a-z0-9][a-z0-9\-]{4,48}$
        ]]
        then
          echo "!!! Invalid feature net name"
          exit 1
        fi

    - name: Checkout featurenets repo
      uses: actions/checkout@v3
      with:
        repository: Cardinal-Cryptography/${{ inputs.repo-featurenets-name }}
        token: ${{ inputs.gh-ci-token }}
        path: "${{ inputs.repo-featurenets-name }}"
        ref: main

    - name: Checkout featurenet template repo
      if: ${{ steps.get-featurenet-template-tag.outputs.featurenet-template-tag != '' }}
      uses: actions/checkout@v3
      with:
        repository: Cardinal-Cryptography/${{ inputs.repo-featurenet-template-name }}
        token: ${{ inputs.gh-ci-token }}
        path: "${{ inputs.repo-featurenet-template-name }}"
        ref: main
        fetch-depth: 0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      env:
        AWS_REGION: us-east-1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Destroy featurenet files
      shell: bash
      run: |
        cd '${{ inputs.repo-featurenet-template-name }}'

        ./delete-featurenet.sh \
          '${{ github.workspace }}/${{ inputs.repo-featurenets-name }}' \
          '${{ inputs.featurenet-name }}'

    - name: Commit deletion of the feature environment
      uses: EndBug/add-and-commit@v9.1.1
      with:
        author_name: "${{ inputs.git-commit-author }}"
        author_email: "${{ inputs.git-commit-email }}"
        message: "Delete featurenet ${{ inputs.featurenet-name }}"
        add: '["*.yaml","*.txt"]'
        cwd: "${{ inputs.repo-featurenets-name }}"
        pull: '--rebase --autostash'

    # we need self-hosted runner only because of this step
    - name: Refresh Argo and wait for the deletion to be finished
      shell: bash
      run: |
        cd '${{ inputs.repo-featurenet-template-name }}'

        ./refresh-featurenets.sh '${{ inputs.argo-sync-user-token }}'

    - name: Clean S3 storage
      shell: bash
      run: |
        cd '${{ inputs.repo-featurenet-template-name }}'

        ./delete-featurenet-data-from-s3.sh '${{ inputs.featurenet-name }}'
