---
name: Create branchpreview
description: Creates branchpreview
inputs:
  gh-ci-token:
    description: 'GH token to be used in the action'
    required: true
  repo-branchpreviews-name:
    description: 'Name of the repository containing branchpreview manifests'
    required: true
  repo-branchpreview-templates-name:
    description: 'Name of the repository containing branchpreview templates'
    required: true
  argo-host:
    description: 'ArgoCD host'
    required: true
  argo-sync-user-token:
    description: 'ArgoCD user token to be used in the action'
    required: true
  repository-name:
    description: 'Repository name'
    required: true
  branch-name:
    description: 'Branch name'
    required: true
  git-commit-author:
    description: 'Git commit author when pushing to branchpreviews repository'
    required: true
  git-commit-email:
    description: 'Git commit email when pushing to branchpreviews repository'
    required: true
  image:
    description: 'Full docker image in format of host/repo:tag'
    required: true
  hard-refresh:
    description: 'Make hard-refresh of ArgoCD application'
    required: false
    default: "false"
  post-frontend-url:
    description: "Post frontend-url output value"
    required: false
    default: "false"
  pull-request-number:
    description: "Pull request number to post the frontend-url to"
    required: false
    default: ""
outputs:
  app-name:
    description: |
      App name based on repo and branch with a prefix, used in ArgoCD app,
      URLs etc.
    value: ${{ steps.start-branchpreview.outputs.app-name }}
  safe-branch-name:
    description: Safe branch name
    value: ${{ steps.start-branchpreview.outputs.safe-branch-name }}
  base64:
    description: All outputs encoded in base64
    value: ${{ steps.start-branchpreview.outputs.all-base64 }}
runs:
  using: "composite"
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        if [[
          ! '${{ inputs.repository-name }}' =~ ^[a-zA-Z0-9-]+$
        ]]
        then
          echo '!!! Invalid repository name'
          exit 1
        fi

        if [[
          ! '${{ inputs.branch-name }}' =~ ^[a-zA-Z0-9/_-]+$
        ]]
        then
          echo '!!! Invalid branch name'
          exit 1
        fi

    - name: Checkout branchpreviews repo
      uses: actions/checkout@v3
      with:
        repository: Cardinal-Cryptography/${{ inputs.repo-branchpreviews-name }}
        token: ${{ inputs.gh-ci-token }}
        path: '${{ inputs.repo-branchpreviews-name }}'
        ref: main

    - name: Checkout branchpreview templates repo
      uses: actions/checkout@v3
      with:
        repository: Cardinal-Cryptography/${{ inputs.repo-branchpreview-templates-name }}
        token: ${{ inputs.gh-ci-token }}
        path: '${{ inputs.repo-branchpreview-templates-name }}'
        ref: compatibility

    - name: Start branchpreview
      id: start-branchpreview
      shell: bash
      # yamllint disable rule:line-length
      env:
        OPSSH_TARGETPATH: ${{ github.workspace }}/${{ inputs.repo-branchpreviews-name }}
      run: |
        cd '${{ inputs.repo-branchpreview-templates-name }}'
        ./Ops.sh create-branchpreview \
          '${{ inputs.repository-name }}' \
          '${{ inputs.branch-name }}' \
          '${{ inputs.image }}' | tee -a tmp-opssh-createbranchpreviews-output.txt

        app_name=$(cat tmp-opssh-createbranchpreviews-output.txt | grep '^__output:app-name:' | cut -d: -f3)
        safe_branch_name=$(cat tmp-opssh-createbranchpreviews-output.txt | grep '^__output:safe-branch-name:' | cut -d: -f3)
        image_tag=$(echo '${{ inputs.image }}' | cut -d: -f2)
        all_base64=$(cat tmp-opssh-createbranchpreviews-output.txt | grep '^__output:' | sed 's|__output:||g' | base64 -w 0)

        echo "app-name=${app_name}" >> $GITHUB_OUTPUT
        echo "safe-branch-name=${safe_branch_name}" >> $GITHUB_OUTPUT
        echo "image-tag=${image_tag}" >> $GITHUB_OUTPUT
        echo "all-base64=${all_base64}" >> $GITHUB_OUTPUT
      # yamllint enable rule:line-length

    - name: Commit branchpreview change
      uses: EndBug/add-and-commit@v9.1.1
      with:
        author_name: '${{ inputs.git-commit-author }}'
        author_email: '${{ inputs.git-commit-email }}'
        # yamllint disable-line rule:line-length
        message: 'Upsert ${{ inputs.repository-name }}:${{ inputs.branch-name }} with image tag: ${{ steps.start-branchpreview.outputs.image-tag }}'
        add: '["*.yaml","*.txt"]'
        cwd: '${{ inputs.repo-branchpreviews-name }}'
        pull: '--rebase --autostash'

    - name: Refresh Argo and wait for the creation to be finished
      shell: bash
      env:
        OPSSH_TARGETPATH: '${{ github.workspace }}/${{ inputs.repo-branchpreviews-name }}'
      run: |
        cd '${{ inputs.repo-branchpreview-templates-name }}'
        ./Ops.sh refresh-branchpreviews '${{ inputs.argo-host }}' \
          '${{ inputs.argo-sync-user-token }}' \
          '${{ steps.start-branchpreview.outputs.app-name }}' \
          '${{ inputs.hard-refresh == 'true' && 'true' || 'false' }}'

    - name: Post frontend-url in comments
      if: >
        inputs.post-frontend-url == 'true' &&
        inputs.repository-name != '' &&
        inputs.pull-request-number != ''
      shell: bash
      env:
        CI_GH_TOKEN: ${{ inputs.gh-ci-token }}
      run: |
        echo '${{ steps.start-branchpreview.outputs.all-base64 }}' | base64 -d > tmp-outputs.txt
        frontend_url=$(cat tmp-outputs.txt | grep "^frontend-url" | sed 's|frontend-url:||g')
        curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ env.CI_GH_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/Cardinal-Cryptography/${{ inputs.repository-name }}/issues/${{ inputs.pull-request-number }}/comments \
            -d "{\"body\":\"The following site has been deployed: [${frontend_url}](${frontend_url})\"}"
