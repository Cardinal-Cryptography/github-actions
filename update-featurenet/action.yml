---
name: Create featurenet
description: |
  This action is used in several dev flows to
  * spawn new featurenet from any aleph node git ref,
  * update binary in the existing featurenet,
  * update rolling partition in the existing featurenet,
inputs:
  gh-ci-user:
    description: 'GH user to be used in the action'
    required: true
  gh-ci-token:
    description: 'GH token to be used in the action'
    required: true
  repo-featurenet-template-name:
    description: 'Name of the repository containing featurenet template'
    required: true
  argo-sync-user-token:
    description: 'ArgoCD user token to be used in the action'
    required: true
  featurenet-name:
    description: 'Name of featurenet'
    required: true
  git-commit-author:
    description: 'Git commit author when pushing to featurenets repository'
    required: true
  git-commit-email:
    description: 'Git commit email when pushing to featurenets repository'
    required: true
  featurenet-aleph-node-image:
    description: 'aleph-node docker image tag'
    required: true
    default: ''
  rolling-update-partition:
    description: |
      Number from 0 to N-1, where N is size of am existing featurenet.
      All aleph-node-validator-N with an ordinal N that is great than or equal to the partition
      will be updated. If not specified, all nodes will be updated.
    required: false
    default: "0"
  wait-for-finalized-heads:
    description: 'Wait for heads finalization'
    required: false
    default: "false"
outputs:
  ws-hostname:
    description: Hostname of the WS endpoint
    value: ${{ steps.start-featurenet.outputs.ws-hostname }}

runs:
  using: "composite"
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        if [[
          ! '${{ inputs.featurenet-name }}' =~ ^[a-z0-9][a-z0-9\-]{4,48}$
        ]]
        then
          echo "!!! Invalid featurenet name"
          exit 1
        fi
        if [[
          ! '${{ inputs.featurenet-aleph-node-image }}' =~ ^[a-z0-9][a-z0-9\._/:\-]{1,52}$
        ]]
        then
          echo "!!! Invalid featurenet node image tag"
          exit 1
        fi
        if [[
          '${{ inputs.rolling-update-partition }}' != "" && \
          ! '${{ inputs.rolling-update-partition }}' =~ ^[0-9]$
        ]]
        then
          echo "!!! Expected rolling update partition to be a cardinal value from 0 to 9"
          exit 1
        fi

    - name: Checkout featurenet template repo
      uses: actions/checkout@v4
      with:
        repository: Cardinal-Cryptography/${{ inputs.repo-featurenet-template-name }}
        token: ${{ inputs.gh-ci-token }}
        path: "${{ inputs.repo-featurenet-template-name }}"
        ref: A0-4278

    - name: Start featurenet
      id: start-featurenet
      shell: bash
      env:
        GITHUB_USERNAME: ${{ inputs.gh-ci-user }}
        GITHUB_TOKEN: ${{ inputs.gh-ci-token }}
        GIT_COMMIT_USER_NAME: ${{ inputs.git-commit-author }}
        GIT_COMMIT_USER_EMAIL: ${{ inputs.git-commit-email }}
      # yamllint disable rule:line-length
      run: |
        cd '${{ inputs.repo-featurenet-template-name }}'

        ./upsert-featurenet.sh \
          '${{ inputs.featurenet-name }}' \
          '${{ inputs.featurenet-aleph-node-image }}' \
          'replicas-not-used-because-update' \
          '${{ inputs.rolling-update-partition }}' \
          'expiration-not-used-because-update' \
          'sudo-not-used-because-update' \
          'chain-bootstrapper-not-used-because-update' \
          'finality-version-not-used-because-update' \
          -u \
          -c -g | tee -a tmp-opssh-updatefeaturenet-output.txt

        ws_hostname=$(cat tmp-opssh-updatefeaturenet-output.txt | grep '^__output:ws-hostname:' | cut -d: -f3)
        echo "ws-hostname=${ws_hostname}" >> $GITHUB_OUTPUT
      # yamllint enable rule:line-length

    - name: Refresh Argo and wait for the creation to be finished
      shell: bash
      run: |
        cd '${{ inputs.repo-featurenet-template-name }}'

        ./refresh-featurenets.sh '${{ inputs.argo-sync-user-token }}' '${{ inputs.featurenet-name }}'

    - name: Wait for the unique consecutive finalized heads
      if: inputs.wait-for-finalized-heads == 'true'
      shell: bash
      run: |
        cd '${{ inputs.repo-featurenet-template-name }}'

        ./wait-for-featurenet-finalized-heads.sh '${{ inputs.featurenet-name }}'
